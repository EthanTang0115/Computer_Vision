This is the readme file for 601.661 computer vision HW1 programming assignment
Yichuan Tang

Task 1a: 
binary threshold: 127
The binary image generated are in 0 and 1, thus the bianry image is all dark. I multiplied 255 when call 'imshow' to make it clear to view.

Task 1c:
in the database dictionary 10 fields are defined:
1. 'Area' - area of the detected object
2. 'x_Position' - column index of the centroid of object
3. 'y_Position' - row index of the centroid of object
4. 'x_Second_Moment' - senond moment w.r.t. column axis
5. 'bilinear_Moment' - bilinear moment term 'xy'
6. 'y_Second_Moment' - second moment w.r.t. row axis
7. 'a' - a parameter used in orientation computation
8. 'b' - a parameter used in orientation computation
9. 'c' - a parameter used in orientation computation
10. 'Orientation' - orientation of principle axis of the object

Task 1d: 
binary threshold: 127
comparison criteria: object area difference
comparison threshold: 500

Task 2a:
In this task I implemented both 3 by 3 and 5 by 5 Sobel Kernel, the 3 by 3 one is chosen because of faster computation and no obvious drop in edge detection quality. In the collected screen shots included in submission file, there are results generated by both masks. Please check, there's no obvious difference.

Task 2b:
resolution chosen: 1
-resolution chosen as 1 (highest resolution) to make the hough image more accurate, in expense of computation time.
voting scheme: when a point on line defined by certain rho and theta is detected, accumulator array add one.
edge_threshold:180

Task 2c:
hough_threshold: 450 (for simple1 and simple2), 100 (for complex1)


Task 2d:
In this part I tried to implement a algorithm which:
1. go through each line defined by a pair of rho and theta and fine points on this line, make a list of points for each line.
2. resort points in each line so they are arranged in asscending row or column order.
3. find the first and last points in each point list, they serve as the end points for each line segment.

But the code does not seem like to work well

